---
import { type CollectionEntry, getCollection, render } from "astro:content"
import { fade } from "astro:transitions"
import { CalendarIcon, BookIcon, EditIcon } from "lucide-react"

import MainLayout from "@/layouts/MainLayout.astro"
import { formatDate } from "@/utils"
import { Container } from "@/components/Container.tsx"

export async function getStaticPaths() {
  const posts = await getCollection("blog")
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }))
}

type Props = CollectionEntry<"blog">
const post = Astro.props
const { title, description, date, categories } = post.data
const { Content, remarkPluginFrontmatter } = await render(post)

const postFullUrl = `https://nvd.sh/post/${post.id}`
const socialLinkTitle = `Nick Van Dyck: ${post.data.title}`
const editUrl = `https://github.com/vandycknick/nvd.sh/edit/main/${post.filePath}`
const readingTime = remarkPluginFrontmatter.readingTime

const coverImage = post.data.cover
const labels = `${post.data.categories.join(", ")}`

const items = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
const index = items.findIndex((x) => x.id === post.id)
const prev = items[(index - 1 + items.length) % items.length]
const next = items[(index + 1) % items.length]
---

<MainLayout
  title={title}
  description={description}
  openGraph={{
    basic: {
      type: "article",
      title: title,
      image: `https://nvd.sh{coverImage.src}`,
      url: postFullUrl,
    },
    article: {
      publishedTime: date.toISOString(),
      tags: categories,
      authors: ["Nick Van Dyck"],
    },
  }}
  twitter={{
    card: "summary",
    creator: "@vandycknick",
    image: `https://nvd.sh{coverImage.src}`,
  }}
  extend={{
    meta: [
      {
        name: "twitter:label1",
        content: "Written by",
      },
      {
        name: "twitter:data1",
        content: "Nick Van Dyck",
      },
      {
        name: "twitter:label2",
        content: "Filed under",
      },
      {
        name: "twitter:data2",
        content: labels,
      },
    ],
  }}
>
  <div class="w-full absolute top-0 z-10" slot="background">
    <div
      class="lg:mx-auto max-w-full lg:max-w-5xl w-full h-80 opacity-80 bg-center bg-cover lg:rounded-b-md"
      style={`background-image: url(${post.data.cover.src})`}
      data-pagefind-meta={`cover:${post.data.cover.src}`}
    >
    </div>

    <div
      class="absolute left-0 right-0 bottom-0 mx-auto max-w-full lg:max-w-5xl backdrop-blur-xl bg-black/60 pt-12 pb-6 lg:rounded-b-sm"
      style="mask-image: linear-gradient(
        to bottom,
        hsla(0, 0%, 0%, 0) 0%,
        hsla(0, 0%, 0%, 0.133) 4.2%,
        hsla(0, 0%, 0%, 0.256) 7.7%,
        hsla(0, 0%, 0%, 0.369) 10.9%,
        hsla(0, 0%, 0%, 0.472) 13.8%,
        hsla(0, 0%, 0%, 0.566) 16.8%,
        hsla(0, 0%, 0%, 0.65) 20.1%,
        hsla(0, 0%, 0%, 0.725) 23.9%,
        hsla(0, 0%, 0%, 0.79) 28.4%,
        hsla(0, 0%, 0%, 0.847) 33.8%,
        hsla(0, 0%, 0%, 0.894) 40.5%,
        hsla(0, 0%, 0%, 0.933) 48.6%,
        hsla(0, 0%, 0%, 0.962) 58.4%,
        hsla(0, 0%, 0%, 0.983) 70.1%,
        hsla(0, 0%, 0%, 0.996) 83.9%,
        hsl(0, 0%, 0%) 100%
    );"
    >
      <h1
        class="text-3xl sm:text-4xl text-center font-bold tracking-tight text-white"
      >
        {post.data.title}
      </h1>
      <section class="flex flex-col items-center">
        <div class="flex pt-6" data-pagefind-ignore>
          <div class="flex justify-center items-center">
            <CalendarIcon className="w-5 h-5 mr-1 font-bold text-white" />
            <span class="font-bold text-white">
              {formatDate(date)}
            </span>
          </div>
          <div class="flex justify-center items-center px-4">
            <EditIcon className="w-5 h-5 mr-1 font-bold text-white" />
            <a class="font-bold text-white" href={editUrl}> edit post </a>
          </div>
          <div class="flex justify-center items-center">
            <BookIcon className="w-5 h-5 mr-1 font-bold text-white" />
            <span class="font-bold text-white">{readingTime}</span>
          </div>
        </div>
      </section>
    </div>
  </div>

  <Container className="pt-60">
    <header class="flex flex-col items-center"></header>
    <section class="flex-1">
      <article
        class="mt-8 prose dark:prose-invert"
        transition:animate={fade({ duration: "0.5s" })}
      >
        <Content />
      </article>
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <a
          href={`/post/${prev.id}`}
          class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 blend"
        >
          <div
            class="order-2 w-full h-full group-hover:text-black group-hover:dark:text-white blend"
          >
            <div class="flex flex-wrap gap-2">
              <div class="text-sm uppercase">Prev</div>
            </div>
            <div class="font-semibold mt-3 text-black dark:text-white">
              {prev.data.title}
            </div>
          </div>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke-width="2.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="order-1 stroke-current group-hover:stroke-black group-hover:dark:stroke-white rotate-180"
          >
            <line
              x1="5"
              y1="12"
              x2="19"
              y2="12"
              class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
            ></line>
            <polyline
              points="12 5 19 12 12 19"
              class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
            ></polyline>
          </svg>
        </a>
        <a
          href={`/post/${next.id}`}
          class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out"
        >
          <div
            class="w-full h-full text-right group-hover:text-black group-hover:dark:text-white blend"
          >
            <div class="text-sm uppercase">Next</div>
            <div class="font-semibold mt-3 text-black dark:text-white">
              {next.data.title}
            </div>
          </div>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke-width="2.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white"
          >
            <line
              x1="5"
              y1="12"
              x2="19"
              y2="12"
              class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
            ></line>
            <polyline
              points="12 5 19 12 12 19"
              class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
            ></polyline>
          </svg>
        </a>
      </div>
    </section>
  </Container>
</MainLayout>
