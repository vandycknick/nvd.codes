---
import { getCollection } from "astro:content"

import MainLayout from "@/layouts/MainLayout.astro"
import { Greeting } from "@/components/Home/Greeting"
import { LatestBlogPosts } from "@/components/Home/LatestBlogPosts"
import { DotMatrixThemedWebGLAnimation } from "@/components/Home/DotMatrix"
import "../styles/global.css"

const allBlogPosts = await getCollection("blog", (post) => !post.data.draft)

const sorted = allBlogPosts.sort(
  (l, r) => r.data.date.getTime() - l.data.date.getTime(),
)
const featuredPosts = sorted.slice(0, 3)
const latestPosts = featuredPosts.map((post) => ({
  title: post.data.title,
  description: post.data.description,
  date: post.data.date,
  slug: post.id,
  cover: post.data.cover,
}))
---

<MainLayout>
  <div
    class="flex w-[100%] flex-col min-h-screen bg-white dark:bg-zinc-950 absolute"
    slot="background"
  >
    <div class="absolute inset-0">
      <DotMatrixThemedWebGLAnimation client:only transition:persist />
    </div>
    <div
      class="absolute inset-0 landscape:mt-8 bg-[radial-gradient(circle_at_center,_white_20%,_transparent_100%)] dark:bg-[radial-gradient(circle_at_center,_rgba(0,0,0,1)_20%,_transparent_100%)]"
    >
    </div>
    <div
      class="absolute top-0 left-0 right-0 h-1/3 bg-gradient-to-b from-white dark:from-zinc-950 to-transparent"
    >
    </div>
    <div
      class="absolute inset-0 bg-gradient-to-t from-white dark:from-zinc-950 to-transparent"
    >
    </div>
  </div>
  <Greeting
    twitterUrl="https://twitter.com/vandycknick"
    githubUrl="https://github.com/vandycknick"
    linkedinUrl="https://www.linkedin.com/in/nickvandyck/"
  />
  <LatestBlogPosts posts={latestPosts} />
</MainLayout>
