---
import { formatDate } from "@/utils"
import type { PostPreview } from "@/components/Blog/types"
import { CalendarIcon } from "@/components/Icons"

interface Props {
  post: PostPreview
  pill?: boolean
  transition?: boolean
}

const { post, pill, transition } = Astro.props

const createTransitionLabels = () => {
  if (transition === false) {
    return { title: "", description: "", details: "" }
  }

  return {
    title: `post-title-${post.slug}`,
    description: `post-description-${post.slug}`,
    details: `post-details-${post.slug}`,
  }
}

const labels = createTransitionLabels()
---

<a
  href={`/post/${post.slug}`}
  class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out"
>
  <div class="w-full group-hover:text-black group-hover:dark:text-white blend">
    <div class="flex flex-wrap items-center text-sm gap-2">
      <!-- <div class="text-sm uppercase" transition:name={labels.details}> -->
      <!--   {formatDate(post.date)} -->
      <!-- </div> -->

      <!-- <svg class="size-4 stroke-current"> -->
      <!--   <use href="/ui.svg#calendar"></use> -->
      <!-- </svg> -->
      <CalendarIcon className="size-5" />
      <span class="text-sm uppercase">
        {formatDate(post.date)}
      </span>
      <!-- <div class="flex items-center gap-2"> -->
      <!--   <svg class="size-5 stroke-current"> -->
      <!--     <use href="/ui.svg#book-open"></use> -->
      <!--   </svg> -->
      <!--   {post.readingTime} -->
      <!-- </div> -->
    </div>
    <h1
      class="font-semibold mt-3 text-black dark:text-white"
      transition:name={labels.title}
    >
      {post.title}
    </h1>

    <div class="text-sm line-clamp-2" transition:name={labels.description}>
      {post.description}
    </div>
    <ul class="flex flex-wrap mt-2 gap-1">
      {
        post.tags.map((tag) => (
          <li class="text-xs uppercase py-0.5 px-1 rounded bg-black/5 dark:bg-white/20 text-black/75 dark:text-white/75">
            {tag}
          </li>
        ))
      }
    </ul>
  </div>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke-width="2.5"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white"
  >
    <line
      x1="5"
      y1="12"
      x2="19"
      y2="12"
      class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
    ></line>
    <polyline
      points="12 5 19 12 12 19"
      class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out"
    ></polyline>
  </svg>
</a>
