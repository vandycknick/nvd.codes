name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  app-test:
    name: App Test
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: setup-node
        uses: ./.github/actions/setup-node
        with:
          node-version: 24

      - name: Lint Code
        run: make check.app

  app-build:
    name: App Build
    runs-on: ubuntu-latest
    needs:
      - app-test
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: setup-node
        uses: ./.github/actions/setup-node
        with:
          node-version: 24

      - name: Build blog
        run: make build

      - name: Upload App
        uses: actions/upload-artifact@v4
        with:
          name: app-web
          path: ./dist

  app-deploy-staging:
    name: App Staging
    uses: ./.github/workflows/web-deploy.yml
    needs:
      - infra-init
      - app-build
    with:
      environment: staging
      node-version: 24
      domain: staging.nvd.sh
    secrets:
      AWS_ROLE_NAME: ${{ secrets.AWS_ROLE_NAME }}

  infra-init:
    name: Init Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - id: setup-terraform
        uses: ./.github/actions/setup-terraform
        with:
          terraform-version: 1.12.2
          tflint-version: v0.52.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_TERRAFORM_ROLE }}

      - name: Init Workspace
        run: make infra.init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}
          TF_WORKSPACE: staging

      - name: Validate
        run: make check.infra
        env:
          TF_WORKSPACE: staging

  infra-deploy-staging:
    name: Infra Staging
    uses: ./.github/workflows/terraform-deploy.yml
    needs:
      - infra-init
    with:
      environment: staging
      terraform-version: 1.12.2
      working-directory: ./infra
    secrets:
      AWS_TERRAFORM_ROLE: ${{ secrets.AWS_TERRAFORM_ROLE }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  infra-deploy-prod:
    name: Infra Production
    uses: ./.github/workflows/terraform-deploy.yml
    needs:
      - infra-deploy-staging
      - app-deploy-staging
    with:
      environment: production
      terraform-version: 1.12.2
      working-directory: ./infra
    secrets:
      AWS_TERRAFORM_ROLE: ${{ secrets.AWS_TERRAFORM_ROLE }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
